import java.util.*;

class Prim {
    static int V=6;
    static int[][] graph={
        {0,6,1,5,0,0},
        {6,0,2,0,5,0},
        {1,2,0,2,6,0},
        {5,0,2,0,0,4},
        {0,5,6,0,0,3},
        {0,0,0,4,3,0}
    };

    static void prim(int start){
        boolean[] visited=new boolean[V];
        int[] key=new int[V];
        int[] parent=new int[V];
        Arrays.fill(key,Integer.MAX_VALUE);
        key[start]=0;
        for(int i=0;i<V;i++){
            int u=-1;
            for(int j=0;j<V;j++)
                if(!visited[j]&&(u==-1||key[j]<key[u])) u=j;
            visited[u]=true;
            for(int v=0;v<V;v++)
                if(graph[u][v]!=0&&!visited[v]&&graph[u][v]<key[v]){
                    key[v]=graph[u][v];
                    parent[v]=u;
                }
        }
        int cost=0;
        for(int i=0;i<V;i++) if(i!=start) cost+=graph[i][parent[i]];
        System.out.println("Costo: "+cost);
    }

    public static void main(String[] args){
        prim(0);
        prim(2);
    }
}
